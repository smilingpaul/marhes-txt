/*
 * lcd.h
 *
 *  Created on: Jul 25, 2010
 *      Author: Titus
 */

#ifndef LCD_H_
#define LCD_H_

#include "app_types.h"
#include "LPC23xx.h"

/*************************************************************************
 *             Definitions
 *************************************************************************/
#define PCSSP0			(1<<21)
#define PCLK_SSP0_1		(1<<10)
#define PINSEL3_SCK0	(3<<8)
//#define PINSEL3_SSEL0	(3<<10)
#define PINSEL3_MISO0	(3<<14)
#define PINSEL3_MOSI0	(3<<16)
#define LCD_CS_MASK		(1<<21)

#define SSP0CR0_DSS_4	(3)
#define SSP0CR0_DSS_5	(4)
#define SSP0CR0_DSS_6	(5)
#define SSP0CR0_DSS_7	(6)
#define SSP0CR0_DSS_8	(7)
#define SSP0CR0_DSS_9	(8)
#define SSP0CR0_DSS_10	(9)
#define SSP0CR0_DSS_11	(10)
#define SSP0CR0_DSS_12	(11)
#define SSP0CR0_DSS_13	(12)
#define SSP0CR0_DSS_14	(13)
#define SSP0CR0_DSS_15	(14)
#define SSP0CR0_DSS_16	(15)
#define SSP0CR0_FRF_SPI	(0<<4)
#define SSP0CR0_FRF_TI	(1<<4)
#define SSP0CR0_FRF_MW	(2<<4)
#define SSP0CR0_CPOL	(1<<6)
#define SSP0CR0_CPHA	(1<<7)
#define SSP0CR0_SCR		(35<<8)

#define SSP0CR1_LBM		(1<<0)
#define SSP0CR1_SSE		(1<<1)
#define SSP0CR1_MS		(1<<2)
#define SSP0CR1_SOD		(1<<3)

#define SSP0SR_TFE		(1<<0)
#define SSP0SR_TNF		(1<<1)
#define SSP0SR_RNE		(1<<2)
#define SSP0SR_RFF		(1<<3)
#define SSP0SR_BSY		(1<<4)

#define SSP0CPSR_CPSDVSR (72)

#define LCD_BACKLIGHT	(1<<26)
#define LCD_RESET		(1<<25)

// Philips PCF8833 LCD controller command codes
#define NOP 			0x00 		// nop
#define SWRESET 		0x01 		// software reset
#define BSTROFF 		0x02 		// booster voltage OFF
#define BSTRON 			0x03 		// booster voltage ON
#define RDDIDIF 		0x04 		// read display identification
#define RDDST 			0x09 		// read display status
#define SLEEPIN 		0x10 		// sleep in
#define SLEEPOUT 		0x11 		// sleep out
#define PTLON 			0x12 		// partial display mode
#define NORON 			0x13 		// display normal mode
#define INVOFF 			0x20 		// inversion OFF
#define INVON 			0x21 		// inversion ON
#define DALO 			0x22 		// all pixel OFF
#define DAL 			0x23 		// all pixel ON
#define SETCON 			0x25 		// write contrast
#define DISPOFF 		0x28 		// display OFF
#define DISPON 			0x29 		// display ON
#define CASET 			0x2A 		// column address set
#define PASET 			0x2B 		// page address set
#define RAMWR 			0x2C 		// memory write
#define RGBSET 			0x2D 		// colour set
#define PTLAR 			0x30 		// partial area
#define VSCRDEF 		0x33 		// vertical scrolling definition
#define TEOFF 			0x34 		// test mode
#define TEON 			0x35 		// test mode
#define MADCTL 			0x36 		// memory access control
#define SEP 			0x37 		// vertical scrolling start address
#define IDMOFF 			0x38 		// idle mode OFF
#define IDMON 			0x39 		// idle mode ON
#define COLMOD 			0x3A 		// interface pixel format
#define SETVOP 			0xB0 		// set Vop
#define BRS 			0xB4 		// bottom row swap
#define TRS 			0xB6 		// top row swap
#define DISCTR 			0xB9 		// display control
#define DOR 			0xBA 		// data order
#define TCDFE 			0xBD 		// enable/disable DF temperature compensation
#define TCVOPE 			0xBF 		// enable/disable Vop temp comp
#define EC 				0xC0 		// internal or external oscillator
#define SETMUL 			0xC2 		// set multiplication factor
#define TCVOPAB 		0xC3 		// set TCVOP slopes A and B
#define TCVOPCD 		0xC4 		// set TCVOP slopes c and d
#define TCDF 			0xC5 		// set divider frequency
#define DF8COLOR 		0xC6 		// set divider frequency 8-color mode
#define SETBS 			0xC7 		// set bias system
#define RDTEMP 			0xC8 		// temperature read back
#define NLI 			0xC9 		// n-line inversion
#define RDID1 			0xDA 		// read ID1
#define RDID2 			0xDB 		// read ID2
#define RDID3 			0xDC 		// read ID3
// Booleans
#define NOFILL 			0
#define FILL 			1
// 12-bit color definitions
#define WHITE 			0xFFF
#define BLACK 			0x000
#define RED 			0xF00
#define GREEN 			0x0F0
#define BLUE 			0x00F
#define CYAN 			0x0FF
#define MAGENTA 		0xF0F
#define YELLOW 			0xFF0
#define BROWN 			0xB22
#define ORANGE 			0xFA0
#define PINK 			0xF6A
// Font sizes
#define SMALL 			0
#define MEDIUM 			1
#define LARGE 			2

/*************************************************************************
 *             Function declarations
 *************************************************************************/
const unsigned char FONT6x8[97][8];
const unsigned char FONT8x8[97][8];
const unsigned char FONT8x16[97][16];

void LcdInit(void);
void LcdChipSelect(char select);
void LcdSendCommand(unsigned char command);
void LcdSendData(unsigned char data);
void LcdBacklight(unsigned char state);
void LcdReset(unsigned char state);
void LcdClearScreen(void);
void LcdSetXY(int x, int y);
void LcdSetPixel(int  x, int  y, int  color);
void LcdSetLine(int x1, int y1, int x2, int y2, int color);
void LcdSetRect(int x0, int y0, int x1, int y1, unsigned char fill, int color);
void LcdSetCircle(int x0, int y0, int radius, int color);
void LcdPutChar(char c, int  x, int  y, int size, int fcolor, int bcolor);
void LcdPutStr(char *pString, int  x, int  y, int Size, int fColor, int bColor);
//void Delay (unsigned long a);

#endif /* LCD_H_ */
