# NXP LPC2378 ARM7TDMI-S with 512kB Flash and 32kB Local On-Chip SRAM (58kB total), clocked with 72MHz PLL from internal oscillator

if { [info exists CHIPNAME] } {
	set  _CHIPNAME $CHIPNAME
} else {
    set  _CHIPNAME lpc2378
}

if { [info exists ENDIAN] } {
    set  _ENDIAN $ENDIAN
} else {
    set  _ENDIAN little
}

if { [info exists CPUTAPID ] } {
    set _CPUTAPID $CPUTAPID
} else {
    set _CPUTAPID 0x4f1f0f0f
}

#delays on reset lines
jtag_nsrst_delay 200
jtag_ntrst_delay 200

# LPC2000 -> SRST causes TRST
reset_config trst_and_srst srst_pulls_trst

jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME arm7tdmi -endian little -chain-position $_TARGETNAME -variant arm7tdmi-s_r4

# LPC2378 has 32kB of SRAM on its main system bus (so-called Local On-Chip SRAM)
$_TARGETNAME configure -work-area-phys 0x40000000 -work-area-size 0x8000 -work-area-backup 0

$_TARGETNAME configure -event reset-start {
        jtag_khz 500
}

$_TARGETNAME configure -event reset-init {

        # Force target into ARM state
        arm core_state arm
        #do not remap 0x0000-0x0020 to anything but the flash
        mwb 0xE01FC040 0x00

        ## get it up to 72 MHz
        #mwb 0xe01fc080 0x01     # PLLCON, enable PLL and disconnect
        #mwb 0xe01fc08c 0xaa     # PLLFEED
        #mwb 0xe01fc08c 0x55     # PLLFEED

        #mwb 0xe01fc080 0x0      # PLLCON, disable PLL and disconnect
        #mwb 0xe01fc08c 0xaa     # PLLFEED
        #mwb 0xe01fc08c 0x55     # PLLFEED
        
        #mww 0xe01fc1a0 0x20		# SRS - Enable main oscillator
        #sleep 200               # wait for oscillator to be ready
        #mwb 0xe01fc10c 0x01     # CLKSRCSEL <- External 12MHz
		
        #mww 0xe01fc084 0x0b  	# PLLCFG *12/1 (288)
        #mwb 0xe01fc08c 0xaa     # PLLFEED
        #mwb 0xe01fc08c 0x55     # PLLFEED

        #mwb 0xe01fc080 0x01     # PLLCON enable
        #mwb 0xe01fc08c 0xaa     # PLLFEED
        #mwb 0xe01fc08c 0x55     # PLLFEED
        #mwb 0xe01fc104 0x03     # CCLKCFG (/4 -> 72)
        #mwb 0xE01FC108 0x05		# USBCLKCFG (/6 -> 48)
        #sleep 200               # wait for pll lock

        #mww 0xe01fc080 0x03     # PLLCON enable | connect
        #mwb 0xe01fc08c 0xaa     # PLLFEED
        #mwb 0xe01fc08c 0x55     # PLLFEED
		
		# 72MHz / 6 = 12MHz, so use 12000
        jtag_khz 500
}

# LPC2378 has 512kB of FLASH, but upper 8kB are occupied by bootloader.
# In boot loader the clock is 14.748 MHz
#flash bank lpc2000 <base> <size> 0 0 <target#> <variant>
set _FLASHNAME $_CHIPNAME.flash
flash bank lpc2000 0x0 0x0007D000 0 0 $_TARGETNAME lpc2000_v2 14748 calc_checksum
#flash bank $_FLASHNAME lpc2000 0x0 0x0007D000 0 0 $_TARGETNAME lpc2000_v2 72000 calc_checksum

jtag_khz 500
